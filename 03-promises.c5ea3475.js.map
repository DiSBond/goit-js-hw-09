{"version":3,"sources":["js/03-promises.js"],"names":["notification","document","querySelector","delay","step","amount","button","position","onClickBtn","e","preventDefault","numberDelay","Number","value","numberAmount","numberStep","setTimeout","interval","setInterval","clearInterval","console","log","createPromise","then","catch","promise","Promise","resolve","reject","Math","random","addEventListener"],"mappings":";AAEA,MAAMA,EAAeC,SAASC,cAAc,aAEtCC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAEhCI,EAASL,SAASC,cAAc,UAGtC,IAAIK,EAAW,EAOf,SAASC,EAAWC,GAClBA,EAAEC,iBAEEC,IAAAA,EAAcC,OAAOT,EAAMU,OAC3BC,EAAeF,OAAOP,EAAOQ,OAC7BE,EAAaH,OAAOR,EAAKS,OAE7BG,WAAW,KACHC,MAAAA,EAAWC,YAAY,KAEzBX,GAAAA,GAAYO,EAETK,OADPC,QAAQC,IAAI,iBACLF,cAAcF,GAGrBV,GAAY,EACZa,QAAQC,IAAI,qBAEZC,EAAcf,EAAUI,GACzBY,KAAK,EAAGhB,SAAAA,EAAUI,YAAAA,MACjBS,QAAQC,2BAA2Bd,QAAeI,SAEnDa,MAAM,EAAGjB,SAAAA,EAAUI,YAAAA,MAClBS,QAAQC,0BAA0Bd,QAAeI,UAGhDI,IAEDJ,GAIJ,SAASW,EAAcf,EAAUI,GAaxBc,OAXS,IAAIC,QAAQ,CAACC,EAASC,KAEhBC,KAAKC,SAAW,GAGpCH,EAAQ,CAACpB,SAAAA,EAAUI,YAAAA,IAEnBiB,EAAO,CAACrB,SAAAA,EAAUI,YAAAA,MA7CtBL,EAAOyB,iBAAiB,QAASvB","file":"03-promises.c5ea3475.js","sourceRoot":"../src","sourcesContent":["\n//refs\nconst notification = document.querySelector(\".js-alert\");\n\nconst delay = document.querySelector(\"input[name='delay']\");\nconst step = document.querySelector(\"input[name='step']\");\nconst amount = document.querySelector(\"input[name='amount']\");\n\nconst button = document.querySelector(\"button\");\n\n// lets and const \nlet position = 0;\n\n//listeners\nbutton.addEventListener(\"click\", onClickBtn);\n\n\n\nfunction onClickBtn(e) {\n  e.preventDefault();\n\n  let numberDelay = Number(delay.value);\n  let numberAmount = Number(amount.value);\n  let numberStep = Number(step.value);  \n\n  setTimeout(() => {\n    const interval = setInterval(() => {\n\n    if (position >= numberAmount) {\n    console.log(\"stop function\");\n    return clearInterval(interval)\n    }\n    \n    position += 1;\n    console.log(\"starting function\");\n\n    createPromise(position, numberDelay)\n  .then(({ position, numberDelay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${numberDelay}ms`);\n  })\n  .catch(({ position, numberDelay }) => {\n    console.log(`❌ Rejected promise ${position} in ${numberDelay}ms`);\n  });\n \n  }, numberStep);\n   \n }, numberDelay);\n  \n}\n\nfunction createPromise(position, numberDelay) {\n\n  const promise = new Promise((resolve, reject) => {\n\n  const shouldResolve = Math.random() > 0.3;\n    \n  if (shouldResolve) {\n    resolve({position, numberDelay})\n  } else {\n    reject({position, numberDelay})\n  }\n  })\n\n  return promise\n}\n"]}